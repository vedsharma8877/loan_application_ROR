<div class="text-center mt-4">  <h1 class="mb-4 text-4xl font-extrabold leading-none tracking-tight text-gray-900 md:text-5xl lg:text-6xl dark:text-black">We invest in the worldâ€™s potential</h1>
  <p class="mb-6 text-lg font-normal text-gray-500 lg:text-xl sm:px-16 xl:px-48 dark:text-gray-400">Here at Easy Loan Solutions we focus on markets where technology, innovation, and capital can unlock long-term value and drive economic growth.</p>
</div>

<div class="flex items-center justify-center p-12">
    <div class="mx-auto w-full max-w-[550px] bg-white">
    <%= form_with model: @loan do |form| %>
            <div class="mb-5">
                <%= form.label :loan_purpose, "Loan Purpose", class: "mb-3 block text-base font-medium text-[#07074D]" %>
                <%= form.text_field :loan_purpose, class: "w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md", placeholder: "Tell us why you need the loan" %>
            </div>
            <div class="mb-5">
                <%= form.label :loan_amount, "Loan Amount", class: "mb-3 block text-base font-medium text-[#07074D]" %>
                <%= form.text_field :loan_amount, class: "w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md", placeholder: "Enter the loan amount", maxlength: 10, oninput: 'maskLoanAmount(this)' %>
            </div>
            <div class="mb-5">
                <%= form.label :first_name, "First Name", class: "mb-3 block text-base font-medium text-[#07074D]" %>
                <%= form.text_field :first_name, class: "w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md", placeholder: "Enter your First Name" %>
            </div>
            <div class="mb-5">
                <%= form.label :last_name, "Last Name", class: "mb-3 block text-base font-medium text-[#07074D]" %>
                <%= form.text_field :last_name, class: "w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md", placeholder: "Enter your Last Name" %>
            </div>
            <div class="mb-5">
                <%= form.label :date_of_birth, "Date of Birth", class: "mb-3 block text-base font-medium text-[#07074D]" %>
                <%= form.date_field :date_of_birth, class: "w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md", autocomplete: 'off' %>
            </div>
            <div class="mb-5">
                <%= form.label :phone_number, "Phone Number", class: "mb-3 block text-base font-medium text-[#07074D]" %>
                <%= form.text_field :phone_number, class: "w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md", placeholder: "(XXX) XXX-XXXX", pattern: '\(\d{3}\) \d{3}-\d{4}', maxlength: 14, oninput: 'formatPhoneNumber(this)' %>
            </div>
            <div class="mb-5">
                <%= form.label :email, "Email Address", class: "mb-3 block text-base font-medium text-[#07074D]" %>
                <%= form.email_field :email, class: "w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md", placeholder: "Enter your email" %>
            </div>
            <div class="mb-5">
                <%= form.label :ssn, "SSN", class: "mb-3 block text-base font-medium text-[#07074D]" %>
                <%= form.text_field :ssn, class: "w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md", placeholder: "Enter your SSN", placeholder: "XXX-XX-XXXX", pattern: '\d{3}-\d{2}-\d{4}', maxlength: 11, oninput: 'formatSSN(this)' %>
            </div>
            <div class="mb-5 pt-3">
                <label class="mb-5 block text-base font-semibold text-[#07074D] sm:text-xl">
                    Address Details
                </label>
                <div class="-mx-3 flex flex-wrap">
                    <div class="w-full px-3 sm:w-1/2">
                        <div class="mb-5">
                            <%= form.text_field :street_address, class: "w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md", placeholder: "Enter Street Address" %>
                        </div>
                    </div>
                    <div class="w-full px-3 sm:w-1/2">
                        <div class="mb-5">
                            <%= form.text_field :city, class: "w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md", placeholder: "Enter city" %>
                        </div>
                    </div>
                    <div class="w-full px-3 sm:w-1/2">
                        <div class="mb-5">
                            <%= form.text_field :state, class: "w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md", placeholder: "Enter state" %>
                        </div>
                    </div>
                    <div class="w-full px-3 sm:w-1/2">
                        <div class="mb-5">
                            <%= form.text_field :zip, class: "w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md", placeholder: "Enter Zip Code", maxlength: 5, oninput: 'formatZip(this)' %>
                        </div>
                    </div>
                </div>
            </div>
            <div class="mb-5">
                <%= form.label :annual_income, "Annual Income", class: "mb-3 block text-base font-medium text-[#07074D]" %>
                <%= form.text_field :annual_income, class: "w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md", placeholder: "Enter your annual income", maxlength: 8, oninput: 'maskIncome(this)' %>
            </div>
            <div class="mb-5">
                <%= form.label :employer_name, "Employer Name", class: "mb-3 block text-base font-medium text-[#07074D]" %>
                <%= form.text_field :employer_name, class: "w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md", placeholder: "Enter your Employer Name" %>
            </div>
            <div class="mb-5">
                <%= form.label :employer_phone, "Employer Phone Number", class: "mb-3 block text-base font-medium text-[#07074D]" %>
                <%= form.text_field :employer_phone, class: "w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md", placeholder: "(XXX) XXX-XXXX", pattern: '\(\d{3}\) \d{3}-\d{4}', maxlength: 14, oninput: 'formatEmployerPhoneNumber(this)' %>
            </div>
            <div>
                <%= form.submit "Submit", class: "hover:shadow-form w-full rounded-md bg-[#6A64F1] py-3 px-8 text-center text-base font-semibold text-white outline-none" %>
            </div>
        <% end %>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/default.js"></script>
<script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/themes/material_blue.css"></script>
<script>
 function formatSSN(input) {
  var value = input.value.replace(/\D/g, '');

  if (value.length > 5) {
    value = value.slice(0, 3) + '-' + value.slice(3, 5) + '-' + value.slice(5, 9);
  } else if (value.length > 2) {
    value = value.slice(0, 3) + '-' + value.slice(3, 5);
  }

  input.value = value;
}


  function formatPhoneNumber(input) {
    var value = input.value.replace(/\D/g, '');
    if (value.length > 6) {
      value = '(' + value.slice(0, 3) + ') ' + value.slice(3, 6) + '-' + value.slice(6, 10);
    } else if (value.length > 3) {
      value = '(' + value.slice(0, 3) + ') ' + value.slice(3, 6);
    }
    input.value = value;
  }

  function formatHomePhoneNumber(input) {
    var value = input.value.replace(/\D/g, '');
    if (value.length > 6) {
      value = '(' + value.slice(0, 3) + ') ' + value.slice(3, 6) + '-' + value.slice(6, 10);
    } else if (value.length > 3) {
      value = '(' + value.slice(0, 3) + ') ' + value.slice(3, 6);
    }
    input.value = value;
  }
  function formatEmployerPhoneNumber(input) {
    var value = input.value.replace(/\D/g, '');
    if (value.length > 6) {
      value = '(' + value.slice(0, 3) + ') ' + value.slice(3, 6) + '-' + value.slice(6, 10);
    } else if (value.length > 3) {
      value = '(' + value.slice(0, 3) + ') ' + value.slice(3, 6);
    }
    input.value = value;
  }

  function maskLoanAmount(inputElement) {
  let inputValue = inputElement.value;

  // Remove non-numeric characters except for the dot (.)
  inputValue = inputValue.replace(/[^\d.]/g, '');

  // Convert to a floating-point number
  let numericValue = parseFloat(inputValue);

  // Check if the input is a valid number
  if (isNaN(numericValue)) {
    // If input is not a valid number, set the value to an empty string
    inputElement.value = '';
    return; // Exit the function
  }

  // Limit the number of decimal places to two
  numericValue = parseFloat(numericValue.toFixed(2));

  // Format the number as currency using toLocaleString
  const formattedAmount = numericValue.toLocaleString("en-US", {
    style: "currency",
    currency: "USD",
    maximumFractionDigits: 0,
  });

  console.log("formattedAmount", formattedAmount);

  // Update the input element with the formatted value
  inputElement.value = formattedAmount;
}

function maskIncome(inputElement) {
  let inputValue = inputElement.value;

  inputValue = inputValue.replace(/[^\d.]/g, '');

  // Convert to a floating-point number
  let numericValue = parseFloat(inputValue);

  // Check if the input is a valid number
  if (isNaN(numericValue)) {
    inputElement.value = '';
    return; // Exit the function if the input is not a valid number
  }

  // Round to the nearest integer
  numericValue = Math.round(numericValue);

  // Format the number as currency using toLocaleString
  const formattedAmount = numericValue.toLocaleString("en-US", {
    style: "currency",
    currency: "USD",
    maximumFractionDigits: 0, // Set to 0 to remove the decimal part
  });

  console.log("formattedAmount", formattedAmount);

  // Update the input element with the formatted value
  inputElement.value = formattedAmount;
}

function formatZip(input) {
  // Remove non-numeric characters
  var value = input.value.replace(/\D/g, '');

  // Limit the length to 5 digits
  value = value.slice(0, 5);

  // Update the input value
  input.value = value;
}

document.addEventListener('DOMContentLoaded', function() {
    flatpickr('.datepicker', {
      enableTime: false,
      dateFormat: "d-m-Y",
      maxDate: "today",
    });
  });

  
</script>